colnames(dat) <- c("x","y","density")
df <- data.frame(dat)
df[,3] <- factor(df[,3],levels=c(1,2,3,4),labels=c("prior","likelihood","posterior","normal approx"))
g <- ggplot(df,aes(x=x,y=y,color=density)) +
geom_line(size=1.5) +
theme_bw(base_size = 22) +
theme(legend.position="bottom", legend.direction="vertical") +
coord_cartesian(xlim = c(0,1)) +
labs(x='x',y='density', title = "Bayesian inference")
g
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat - 1.96*rho_sd)
xg <- seq(0,1,,300)
alpha <- 1
beta <- 1
n <- 18
s <- 13
rho_hat <- s/n
rho_sd  <- sqrt(rho_hat*(1-rho_hat)/n)
f_prior <- dbeta(xg,alpha,beta)
f_like  <- dbeta(xg,s,n-s)
f_post  <- dbeta(xg,alpha+s,beta+n-s)
f_norm  <- dnorm(xg,rho_hat,rho_sd)
dat1 <- cbind(xg,f_prior,1)
dat2 <- cbind(xg,f_like,2)
dat3 <- cbind(xg,f_post,3)
dat4 <- cbind(xg,f_norm,4)
dat <- rbind(dat1,dat2,dat3,dat4)
colnames(dat) <- c("x","y","density")
df <- data.frame(dat)
df[,3] <- factor(df[,3],levels=c(1,2,3,4),labels=c("prior","likelihood","posterior","normal approx"))
g <- ggplot(df,aes(x=x,y=y,color=density)) +
geom_line(size=1.5) +
theme_bw(base_size = 22) +
theme(legend.position="bottom", legend.direction="vertical") +
coord_cartesian(xlim = c(0,1)) +
labs(x='x',y='density', title = "Bayesian inference")
g
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
xg <- seq(0,1,,300)
alpha <- 1
beta <- 1
n <- 18
s <- 13
rho_hat <- s/n
rho_sd  <- sqrt(rho_hat*(1-rho_hat)/n)
X <- c(rep(1,s),rep(0,n-s))
N <- 1000000
vrho_hat <- c()
for (i in 1:N)
{
samp <- sample(n,replace=TRUE)
vrho_hat[i] <- mean(X[samp])
}
f_prior <- dbeta(xg,alpha,beta)
f_like  <- dbeta(xg,s,n-s)
f_post  <- dbeta(xg,alpha+s,beta+n-s)
f_norm  <- dnorm(xg,rho_hat,rho_sd)
f_boot  <- density(vrho_hat)
dat1 <- cbind(xg,f_prior,1)
dat2 <- cbind(xg,f_like,2)
dat3 <- cbind(xg,f_post,3)
dat4 <- cbind(xg,f_norm,4)
dat5 <- cbind(xg,f_boot,5)
dat <- rbind(dat1,dat2,dat3,dat4,dat5)
colnames(dat) <- c("x","y","density")
df <- data.frame(dat)
df[,3] <- factor(df[,3],levels=c(1,2,3,4),labels=c("prior","likelihood","posterior","normal approx","bootstrap"))
g <- ggplot(df,aes(x=x,y=y,color=density)) +
geom_line(size=1.5) +
theme_bw(base_size = 22) +
theme(legend.position="bottom", legend.direction="vertical") +
coord_cartesian(xlim = c(0,1)) +
labs(x='x',y='density', title = "Bayesian inference")
g
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
xg <- seq(0,1,,300)
alpha <- 1
beta <- 1
n <- 18
s <- 13
rho_hat <- s/n
rho_sd  <- sqrt(rho_hat*(1-rho_hat)/n)
X <- c(rep(1,s),rep(0,n-s))
N <- 1000000
vrho_hat <- c()
for (i in 1:N)
{
samp <- sample(n,replace=TRUE)
vrho_hat[i] <- mean(X[samp])
}
f_prior <- dbeta(xg,alpha,beta)
f_like  <- dbeta(xg,s,n-s)
f_post  <- dbeta(xg,alpha+s,beta+n-s)
f_norm  <- dnorm(xg,rho_hat,rho_sd)
f_boot  <- density(vrho_hat)
dat1 <- cbind(xg,f_prior,1)
dat2 <- cbind(xg,f_like,2)
dat3 <- cbind(xg,f_post,3)
dat4 <- cbind(xg,f_norm,4)
dat5 <- cbind(xg,f_boot,5)
dat <- rbind(dat1,dat2,dat3,dat4,dat5)
colnames(dat) <- c("x","y","density")
df <- data.frame(dat)
df[,3] <- factor(df[,3],levels=c(1,2,3,4),labels=c("prior","likelihood","posterior","normal approx","bootstrap"))
g <- ggplot(df,aes(x=x,y=y,color=density)) +
geom_line(size=1.5) +
theme_bw(base_size = 22) +
theme(legend.position="bottom", legend.direction="vertical") +
coord_cartesian(xlim = c(0,1)) +
labs(x='x',y='density', title = "Bayesian inference")
g
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
xg <- seq(0,1,,300)
alpha <- 1
beta <- 1
n <- 18
s <- 13
rho_hat <- s/n
rho_sd  <- sqrt(rho_hat*(1-rho_hat)/n)
X <- c(rep(1,s),rep(0,n-s))
N <- 1000000
vrho_hat <- c()
for (i in 1:N)
{
samp <- sample(n,replace=TRUE)
vrho_hat[i] <- mean(X[samp])
}
f_prior <- dbeta(xg,alpha,beta)
f_like  <- dbeta(xg,s,n-s)
f_post  <- dbeta(xg,alpha+s,beta+n-s)
f_norm  <- dnorm(xg,rho_hat,rho_sd)
f_boot  <- density(vrho_hat)
dat1 <- cbind(xg,f_prior,1)
dat2 <- cbind(xg,f_like,2)
dat3 <- cbind(xg,f_post,3)
dat4 <- cbind(xg,f_norm,4)
dat5 <- cbind(xg,f_boot,5)
dat <- rbind(dat1,dat2,dat3,dat4,dat5)
colnames(dat) <- c("x","y","density")
df <- data.frame(dat)
df[,3] <- factor(df[,3],levels=c(1,2,3,4,5),labels=c("prior","likelihood","posterior","normal approx","bootstrap"))
g <- ggplot(df,aes(x=x,y=y,color=density)) +
geom_line(size=1.5) +
theme_bw(base_size = 22) +
theme(legend.position="bottom", legend.direction="vertical") +
coord_cartesian(xlim = c(0,1)) +
labs(x='x',y='density', title = "Bayesian inference")
g
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
df
vrho_hat
xg <- seq(0,1,,300)
alpha <- 1
beta <- 1
n <- 18
s <- 13
rho_hat <- s/n
rho_sd  <- sqrt(rho_hat*(1-rho_hat)/n)
X <- c(rep(1,s),rep(0,n-s))
N <- 1000000
vrho_hat <- c()
for (i in 1:N)
{
samp <- sample(n,replace=TRUE)
vrho_hat[i] <- mean(X[samp])
}
f_prior <- dbeta(xg,alpha,beta)
f_like  <- dbeta(xg,s,n-s)
f_post  <- dbeta(xg,alpha+s,beta+n-s)
f_norm  <- dnorm(xg,rho_hat,rho_sd)
f_boot  <- density(vrho_hat)
dat1 <- cbind(xg,f_prior,1)
dat2 <- cbind(xg,f_like,2)
dat3 <- cbind(xg,f_post,3)
dat4 <- cbind(xg,f_norm,4)
dat5 <- cbind(f_boot$x,f_boot$y,5)
dat <- rbind(dat1,dat2,dat3,dat4,dat5)
colnames(dat) <- c("x","y","density")
df <- data.frame(dat)
df[,3] <- factor(df[,3],levels=c(1,2,3,4,5),labels=c("prior","likelihood","posterior","normal approx","bootstrap"))
g <- ggplot(df,aes(x=x,y=y,color=density)) +
geom_line(size=1.5) +
theme_bw(base_size = 22) +
theme(legend.position="bottom", legend.direction="vertical") +
coord_cartesian(xlim = c(0,1)) +
labs(x='x',y='density', title = "Bayesian inference")
g
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
xg <- seq(0,1,,300)
alpha <- 1
beta <- 1
n <- 18
s <- 13
rho_hat <- s/n
rho_sd  <- sqrt(rho_hat*(1-rho_hat)/n)
X <- c(rep(1,s),rep(0,n-s))
N <- 1000000
vrho_hat <- c()
for (i in 1:N)
{
samp <- sample(n,replace=TRUE)
vrho_hat[i] <- mean(X[samp])
}
f_prior <- dbeta(xg,alpha,beta)
f_like  <- dbeta(xg,s,n-s)
f_post  <- dbeta(xg,alpha+s,beta+n-s)
f_norm  <- dnorm(xg,rho_hat,rho_sd)
dat1 <- cbind(xg,f_prior,1)
dat2 <- cbind(xg,f_like,2)
dat3 <- cbind(xg,f_post,3)
dat4 <- cbind(xg,f_norm,4)
dat <- rbind(dat1,dat2,dat3,dat4,dat5)
colnames(dat) <- c("x","y","density")
df <- data.frame(dat)
df[,3] <- factor(df[,3],levels=c(1,2,3,4,5),labels=c("prior","likelihood","posterior","normal approx"))
g <- ggplot(df,aes(x=x,y=y,color=density)) +
geom_line(size=1.5) +
theme_bw(base_size = 22) +
theme(legend.position="bottom", legend.direction="vertical") +
coord_cartesian(xlim = c(0,1)) +
labs(x='x',y='density', title = "Bayesian inference")
g
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
xg <- seq(0,1,,300)
alpha <- 1
beta <- 1
n <- 18
s <- 13
rho_hat <- s/n
rho_sd  <- sqrt(rho_hat*(1-rho_hat)/n)
X <- c(rep(1,s),rep(0,n-s))
N <- 1000000
vrho_hat <- c()
for (i in 1:N)
{
samp <- sample(n,replace=TRUE)
vrho_hat[i] <- mean(X[samp])
}
f_prior <- dbeta(xg,alpha,beta)
f_like  <- dbeta(xg,s,n-s)
f_post  <- dbeta(xg,alpha+s,beta+n-s)
f_norm  <- dnorm(xg,rho_hat,rho_sd)
dat1 <- cbind(xg,f_prior,1)
dat2 <- cbind(xg,f_like,2)
dat3 <- cbind(xg,f_post,3)
dat4 <- cbind(xg,f_norm,4)
dat <- rbind(dat1,dat2,dat3,dat4)
colnames(dat) <- c("x","y","density")
df <- data.frame(dat)
df[,3] <- factor(df[,3],levels=c(1,2,3,4),labels=c("prior","likelihood","posterior","normal approx"))
g <- ggplot(df,aes(x=x,y=y,color=density)) +
geom_line(size=1.5) +
theme_bw(base_size = 22) +
theme(legend.position="bottom", legend.direction="vertical") +
coord_cartesian(xlim = c(0,1)) +
labs(x='x',y='density', title = "Bayesian inference")
g
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
xg <- seq(0,1,,300)
alpha <- 1
beta <- 1
n <- 18
s <- 13
rho_hat <- s/n
rho_sd  <- sqrt(rho_hat*(1-rho_hat)/n)
X <- c(rep(1,s),rep(0,n-s))
N <- 10000000
vrho_hat <- c()
for (i in 1:N)
{
samp <- sample(n,replace=TRUE)
vrho_hat[i] <- mean(X[samp])
}
f_prior <- dbeta(xg,alpha,beta)
f_like  <- dbeta(xg,s,n-s)
f_post  <- dbeta(xg,alpha+s,beta+n-s)
f_norm  <- dnorm(xg,rho_hat,rho_sd)
dat1 <- cbind(xg,f_prior,1)
dat2 <- cbind(xg,f_like,2)
dat3 <- cbind(xg,f_post,3)
dat4 <- cbind(xg,f_norm,4)
dat <- rbind(dat1,dat2,dat3,dat4)
colnames(dat) <- c("x","y","density")
df <- data.frame(dat)
df[,3] <- factor(df[,3],levels=c(1,2,3,4),labels=c("prior","likelihood","posterior","normal approx"))
g <- ggplot(df,aes(x=x,y=y,color=density)) +
geom_line(size=1.5) +
theme_bw(base_size = 22) +
theme(legend.position="bottom", legend.direction="vertical") +
coord_cartesian(xlim = c(0,1)) +
labs(x='x',y='density', title = "Bayesian inference")
g
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
install.packages("prevalence")
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
install.packages("rjags")
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
library(tolerance)
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "LS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "WS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "AC")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CP")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "AS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "LO")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "PR")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "PO")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CL")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CC")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CWS")
iinstall.packages("tolerance")
install.packages("tolerance")
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
library(tolerance)
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "LS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "WS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "AC")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CP")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "AS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "LO")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "PR")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "PO")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CL")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CC")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CWS")
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
library(tolerance)
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "LS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "WS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "AC")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CP")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "AS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "LO")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "PR")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "PO")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CL")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CC")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CWS")
bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CWS")
res <- bintol.int(x = s, n = n, m = n, alpha = 0.05, P = 0.95, side = 2, method = "CWS")
res
res <- bintol.int(x = s, n = n, m = 10000, alpha = 0.05, P = 0.95, side = 2, method = "CWS")
res
res <- bintol.int(x = s, n = n, m = 100000, alpha = 0.05, P = 0.95, side = 2, method = "CWS")
res
res <- bintol.int(x = s, n = n, m = 10000000, alpha = 0.05, P = 0.95, side = 2, method = "CWS")
res
bintol.int
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
library(tolerance)
m <- 1000000
methods <- c("LS", "WS", "AC", "JF", "CP", "AS", "LO", "PR", "PO", "CL", "CC", "CWS")
tab <- c()
for (i in 1:length(methods)) {
res <- bintol.int(x = s, n = n, m = m, alpha = 0.05, P = 0.95, side = 2, method = methods[i])
tab <- rbind(tab,c(res$2-sided.lower,res$2-sided.upper)/m)
}
tab
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
library(tolerance)
m <- 1000000
methods <- c("LS", "WS", "AC", "JF", "CP", "AS", "LO", "PR", "PO", "CL", "CC", "CWS")
tab <- c()
for (i in 1:length(methods)) {
res <- bintol.int(x = s, n = n, m = m, alpha = 0.05, P = 0.95, side = 2, method = methods[i])
tab <- rbind(tab,c(res$2-sided.lower,res$2-sided.upper)/m)
}
tab
res <- bintol.int(x = s, n = n, m = m, alpha = 0.05, P = 0.95, side = 2, method = methods[1])
tab <- rbind(tab,c(res$2-sided.lower,res$2-sided.upper)/m)
res
names(res)
res[4]
res[4:5]
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
library(tolerance)
m <- 1000000
methods <- c("LS", "WS", "AC", "JF", "CP", "AS", "LO", "PR", "PO", "CL", "CC", "CWS")
tab <- c()
for (i in 1:length(methods)) {
res <- bintol.int(x = s, n = n, m = m, alpha = 0.05, P = 0.95, side = 2, method = methods[i])
tab <- rbind(tab,res[4:5]/m)
}
tab
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
library(tolerance)
m <- 1000000
methods <- c("LS", "WS", "AC", "JF", "CP", "AS", "LO", "PR", "PO", "CL", "CC", "CWS")
tab <- c()
for (i in 1:length(methods)) {
res <- bintol.int(x = s, n = n, m = m, alpha = 0.05, P = 0.95, side = 2, method = methods[i])
tab <- rbind(tab,res[4:5]/m)
}
cbind( methods, tab)
qbeta(c(0.025,0.975),alpha+s,beta+n-s)
c(rho_hat - 1.96*rho_sd, rho_hat + 1.96*rho_sd)
quantile(vrho_hat,c(0.025,0.975))
library(prevalence)
propCI(x = s, n = n)
library(tolerance)
m <- 1000000
methods <- c("LS", "WS", "AC", "JF", "CP", "AS", "LO", "PR", "PO", "CL", "CC", "CWS")
tab <- c()
for (i in 1:length(methods)) {
res <- bintol.int(x = s, n = n, m = m, alpha = 0.05, P = 0.95, side = 2, method = methods[i])
tab <- rbind(tab,res[4:5]/m)
}
cbind( methods, tab)
install.packages("rethinking")
map_formula <- alist(
X ~ dbinom(n,theta),
theta ~ dgamma(alpha,beta)
)
start_list <- list(theta=0.5)
df <- data.frame(X=2,n=7442,alpha=20000,beta=1)
res <- map( map_formula , data=df, start=start_list )
library(rethinking)
map_formula <- alist(
X ~ dbinom(n,theta),
theta ~ dgamma(alpha,beta)
)
start_list <- list(theta=0.5)
df <- data.frame(X=2,n=7442,alpha=20000,beta=1)
res <- map( map_formula , data=df, start=start_list )
summary(res)
library(rethinking)
map_formula <- alist(
X ~ dbinom(n,theta),
theta ~ dgamma(alpha,beta)
)
start_list <- list(theta=0.5)
df <- data.frame(X=2,n=7442,alpha=20000,beta=1)
res <- map( map_formula , data=df, start=start_list )
summary(res, prob=0.95)
library(rethinking)
map_formula <- alist(
X ~ dbinom(n,theta),
theta ~ dgamma(alpha,beta)
)
start_list <- list(theta=0.5)
df <- data.frame(X=2,n=7442,alpha=20000,beta=1)
res <- map( map_formula , data=df, start=start_list )
precis(res, prob=0.95)
precis(res, prob=0.95, digits = 3)
c(-2,2,-1,3,2)
mean( c(-2,2,-1,3,2) )
sessor <- c(-2,4,-2,6,4)
mean( sessor 0
mean( sessor )
